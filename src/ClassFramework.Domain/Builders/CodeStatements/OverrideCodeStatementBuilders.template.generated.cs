// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 9.0.10
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace ClassFramework.Domain.Builders.CodeStatements
{
    public partial class StringCodeStatementBuilder : CodeStatementBaseBuilder<StringCodeStatementBuilder, ClassFramework.Domain.CodeStatements.StringCodeStatement>
    {
        private string _statement;

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        public string Statement
        {
            get
            {
                return _statement;
            }
            set
            {
                bool hasChanged = !System.Collections.Generic.EqualityComparer<System.String>.Default.Equals(_statement!, value!);
                _statement = value ?? throw new System.ArgumentNullException(nameof(value));
                if (hasChanged) HandlePropertyChanged(nameof(Statement));
            }
        }

        public StringCodeStatementBuilder(ClassFramework.Domain.CodeStatements.StringCodeStatement source) : base(source)
        {
            if (source is null) throw new System.ArgumentNullException(nameof(source));
            _statement = source.Statement;
        }

        public StringCodeStatementBuilder() : base()
        {
            _statement = string.Empty;
            SetDefaultValues();
        }

        public override ClassFramework.Domain.CodeStatements.StringCodeStatement BuildTyped()
        {
            return new ClassFramework.Domain.CodeStatements.StringCodeStatement(Statement);
        }

        partial void SetDefaultValues();

        public ClassFramework.Domain.Builders.CodeStatements.StringCodeStatementBuilder WithStatement(string statement)
        {
            if (statement is null) throw new System.ArgumentNullException(nameof(statement));
            Statement = statement;
            return this;
        }

        public static implicit operator ClassFramework.Domain.CodeStatements.StringCodeStatement(StringCodeStatementBuilder builder)
        {
            return builder.BuildTyped();
        }
    }
}
#nullable disable
