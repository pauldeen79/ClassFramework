// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 9.0.9
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace ClassFramework.Domain.Builders.Abstractions
{
    public partial interface IAttributesContainerBuilder : CrossCutting.Common.Abstractions.IBuilder<ClassFramework.Domain.Abstractions.IAttributesContainer>
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        System.Collections.ObjectModel.ObservableCollection<ClassFramework.Domain.Builders.AttributeBuilder> Attributes
        {
            get;
            set;
        }
    }
    public partial interface IBaseClassContainerBuilder : CrossCutting.Common.Abstractions.IBuilder<ClassFramework.Domain.Abstractions.IBaseClassContainer>
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings = true)]
        string BaseClass
        {
            get;
            set;
        }
    }
    public partial interface ICodeStatementsContainerBuilder : CrossCutting.Common.Abstractions.IBuilder<ClassFramework.Domain.Abstractions.ICodeStatementsContainer>
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        System.Collections.ObjectModel.ObservableCollection<ClassFramework.Domain.Builders.CodeStatementBaseBuilder> CodeStatements
        {
            get;
            set;
        }
    }
    public partial interface IConcreteTypeBuilder : CrossCutting.Common.Abstractions.IBuilder<ClassFramework.Domain.Abstractions.IConcreteType>, ClassFramework.Domain.Builders.Abstractions.ITypeBuilder, ClassFramework.Domain.Builders.Abstractions.IVisibilityContainerBuilder, ClassFramework.Domain.Builders.Abstractions.INameContainerBuilder, ClassFramework.Domain.Builders.Abstractions.IAttributesContainerBuilder, ClassFramework.Domain.Builders.Abstractions.IGenericTypeArgumentsContainerBuilder, ClassFramework.Domain.Builders.Abstractions.ISuppressWarningCodesContainerBuilder, ClassFramework.Domain.Builders.Abstractions.IConstructorsContainerBuilder, ClassFramework.Domain.Builders.Abstractions.IRecordContainerBuilder, ClassFramework.Domain.Builders.Abstractions.IBaseClassContainerBuilder
    {
    }
    public partial interface IConstructorsContainerBuilder : CrossCutting.Common.Abstractions.IBuilder<ClassFramework.Domain.Abstractions.IConstructorsContainer>
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        System.Collections.ObjectModel.ObservableCollection<ClassFramework.Domain.Builders.ConstructorBuilder> Constructors
        {
            get;
            set;
        }
    }
    public partial interface IDefaultValueContainerBuilder : CrossCutting.Common.Abstractions.IBuilder<ClassFramework.Domain.Abstractions.IDefaultValueContainer>
    {
        object? DefaultValue
        {
            get;
            set;
        }
    }
    public partial interface IEnumsContainerBuilder : CrossCutting.Common.Abstractions.IBuilder<ClassFramework.Domain.Abstractions.IEnumsContainer>
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        System.Collections.ObjectModel.ObservableCollection<ClassFramework.Domain.Builders.EnumerationBuilder> Enums
        {
            get;
            set;
        }
    }
    public partial interface IExplicitInterfaceNameContainerBuilder : CrossCutting.Common.Abstractions.IBuilder<ClassFramework.Domain.Abstractions.IExplicitInterfaceNameContainer>
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings = true)]
        string ExplicitInterfaceName
        {
            get;
            set;
        }
    }
    public partial interface IGenericTypeArgumentsContainerBuilder : CrossCutting.Common.Abstractions.IBuilder<ClassFramework.Domain.Abstractions.IGenericTypeArgumentsContainer>
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        System.Collections.ObjectModel.ObservableCollection<string> GenericTypeArguments
        {
            get;
            set;
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        System.Collections.ObjectModel.ObservableCollection<string> GenericTypeArgumentConstraints
        {
            get;
            set;
        }
    }
    public partial interface IModifiersContainerBuilder : CrossCutting.Common.Abstractions.IBuilder<ClassFramework.Domain.Abstractions.IModifiersContainer>, ClassFramework.Domain.Builders.Abstractions.IVisibilityContainerBuilder
    {
        bool Static
        {
            get;
            set;
        }

        bool Virtual
        {
            get;
            set;
        }

        bool Abstract
        {
            get;
            set;
        }

        bool Protected
        {
            get;
            set;
        }

        bool Override
        {
            get;
            set;
        }

        bool New
        {
            get;
            set;
        }
    }
    public partial interface INameContainerBuilder : CrossCutting.Common.Abstractions.IBuilder<ClassFramework.Domain.Abstractions.INameContainer>
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        string Name
        {
            get;
            set;
        }
    }
    public partial interface IParametersContainerBuilder : CrossCutting.Common.Abstractions.IBuilder<ClassFramework.Domain.Abstractions.IParametersContainer>
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        System.Collections.ObjectModel.ObservableCollection<ClassFramework.Domain.Builders.ParameterBuilder> Parameters
        {
            get;
            set;
        }
    }
    public partial interface IParentTypeContainerBuilder : CrossCutting.Common.Abstractions.IBuilder<ClassFramework.Domain.Abstractions.IParentTypeContainer>
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings = true)]
        string ParentTypeFullName
        {
            get;
            set;
        }
    }
    public partial interface IRecordContainerBuilder : CrossCutting.Common.Abstractions.IBuilder<ClassFramework.Domain.Abstractions.IRecordContainer>
    {
        bool Record
        {
            get;
            set;
        }
    }
    public partial interface IReferenceTypeBuilder : CrossCutting.Common.Abstractions.IBuilder<ClassFramework.Domain.Abstractions.IReferenceType>, ClassFramework.Domain.Builders.Abstractions.ITypeBuilder, ClassFramework.Domain.Builders.Abstractions.IVisibilityContainerBuilder, ClassFramework.Domain.Builders.Abstractions.INameContainerBuilder, ClassFramework.Domain.Builders.Abstractions.IAttributesContainerBuilder, ClassFramework.Domain.Builders.Abstractions.IGenericTypeArgumentsContainerBuilder, ClassFramework.Domain.Builders.Abstractions.ISuppressWarningCodesContainerBuilder
    {
        bool Static
        {
            get;
            set;
        }

        bool Sealed
        {
            get;
            set;
        }

        bool Abstract
        {
            get;
            set;
        }
    }
    public partial interface ISubClassesContainerBuilder : CrossCutting.Common.Abstractions.IBuilder<ClassFramework.Domain.Abstractions.ISubClassesContainer>
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        System.Collections.ObjectModel.ObservableCollection<ClassFramework.Domain.Builders.TypeBaseBuilder> SubClasses
        {
            get;
            set;
        }
    }
    public partial interface ISuppressWarningCodesContainerBuilder : CrossCutting.Common.Abstractions.IBuilder<ClassFramework.Domain.Abstractions.ISuppressWarningCodesContainer>
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        System.Collections.ObjectModel.ObservableCollection<string> SuppressWarningCodes
        {
            get;
            set;
        }
    }
    public partial interface ITypeBuilder : CrossCutting.Common.Abstractions.IBuilder<ClassFramework.Domain.Abstractions.IType>, ClassFramework.Domain.Builders.Abstractions.IVisibilityContainerBuilder, ClassFramework.Domain.Builders.Abstractions.INameContainerBuilder, ClassFramework.Domain.Builders.Abstractions.IAttributesContainerBuilder, ClassFramework.Domain.Builders.Abstractions.IGenericTypeArgumentsContainerBuilder, ClassFramework.Domain.Builders.Abstractions.ISuppressWarningCodesContainerBuilder
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings = true)]
        string Namespace
        {
            get;
            set;
        }

        bool Partial
        {
            get;
            set;
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        System.Collections.ObjectModel.ObservableCollection<string> Interfaces
        {
            get;
            set;
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        System.Collections.ObjectModel.ObservableCollection<ClassFramework.Domain.Builders.FieldBuilder> Fields
        {
            get;
            set;
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        System.Collections.ObjectModel.ObservableCollection<ClassFramework.Domain.Builders.PropertyBuilder> Properties
        {
            get;
            set;
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        System.Collections.ObjectModel.ObservableCollection<ClassFramework.Domain.Builders.MethodBuilder> Methods
        {
            get;
            set;
        }
    }
    public partial interface ITypeContainerBuilder : CrossCutting.Common.Abstractions.IBuilder<ClassFramework.Domain.Abstractions.ITypeContainer>
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        string TypeName
        {
            get;
            set;
        }

        bool IsNullable
        {
            get;
            set;
        }

        bool IsValueType
        {
            get;
            set;
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        System.Collections.ObjectModel.ObservableCollection<ClassFramework.Domain.Builders.Abstractions.ITypeContainerBuilder> GenericTypeArguments
        {
            get;
            set;
        }
    }
    public partial interface IValueTypeBuilder : CrossCutting.Common.Abstractions.IBuilder<ClassFramework.Domain.Abstractions.IValueType>, ClassFramework.Domain.Builders.Abstractions.ITypeBuilder, ClassFramework.Domain.Builders.Abstractions.IVisibilityContainerBuilder, ClassFramework.Domain.Builders.Abstractions.INameContainerBuilder, ClassFramework.Domain.Builders.Abstractions.IAttributesContainerBuilder, ClassFramework.Domain.Builders.Abstractions.IGenericTypeArgumentsContainerBuilder, ClassFramework.Domain.Builders.Abstractions.ISuppressWarningCodesContainerBuilder
    {
    }
    public partial interface IVisibilityContainerBuilder : CrossCutting.Common.Abstractions.IBuilder<ClassFramework.Domain.Abstractions.IVisibilityContainer>
    {
        ClassFramework.Domain.Domains.Visibility Visibility
        {
            get;
            set;
        }
    }
}
#nullable disable
